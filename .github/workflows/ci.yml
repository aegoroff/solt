name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GO111MODULE: on

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ linux, darwin, windows ]
        include:
          - build: linux
            os: ubuntu-latest
          - build: darwin
            os: macos-latest
          - build: windows
            os: windows-latest
    env:
      GOCOVERDIR: "_icoverdir_"

    steps:

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.22"
      id: go

    - name: Install gox
      run: go install github.com/mitchellh/gox@latest

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Build
      run: gox -osarch="${{ matrix.build }}/amd64 ${{ matrix.build }}/arm64" -ldflags "-s -w -X solt/cmd.Version=${{ github.run_number }}" solt

    - name: Test with coverage
      if: matrix.build == 'linux'
      run: |
        mkdir _icoverdir_
        go test -coverprofile=coverage.txt -coverpkg ./... -covermode=atomic ./...

    - name: Test
      if: matrix.build != 'linux'
      run: go test ./...

    - name: Static analysis
      uses: dominikh/staticcheck-action@v1.3.1
      with:
        version: "2022.1.3"
        install-go: true

    - name: Benchmarks
      shell: bash
      run: go test -bench=. solt/internal/fw

    - name: Fuzzing
      shell: bash
      working-directory: solution
      run: go test -fuzz=Fuzz* -fuzztime 120s

    - name: Send coverage
      if: matrix.build == 'linux'
      run: |
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        ./codecov -t ${{ env.CODECOV_TOKEN }}

