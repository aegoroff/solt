name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GO111MODULE: on

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ linux, darwin, windows ]
        include:
          - build: linux
            os: ubuntu-latest
          - build: darwin
            os: macos-latest
          - build: windows
            os: windows-latest

    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
      id: go

    - name: Install gox
      run: go install github.com/mitchellh/gox@latest

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build
      run: gox -osarch="${{ matrix.build }}/amd64 ${{ matrix.build }}/arm64" -ldflags "-s -w -X solt/cmd.Version=${{ github.run_number }}" solt

    - name: Test with coverage
      if: matrix.build != 'windows'
      run: go test -coverprofile=coverage.txt -coverpkg solt/internal/sys,solt/msvc,solt/cmd,solt/internal/fw,solt/internal/ux,solt/internal/out,solt/cmd/in,solt/cmd/nu,solt/cmd/lf,solt/cmd/lp,solt/cmd/va,solt/solution -covermode=atomic solt/...

    - name: Test
      if: matrix.build == 'windows'
      run: go test solt/...

    - name: Benchmarks
      run: go test -bench=. solt/internal/fw

    - name: Send coverage
      if: matrix.build == 'linux'
      run: |
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        ./codecov -t ${{ env.CODECOV_TOKEN }}

